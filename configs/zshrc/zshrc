# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.

#Colours
greenColour="\e[0;32m\033[1m"
endColour="\033[0m\e[0m"
redColour="\e[0;31m\033[1m"
blueColour="\e[0;34m\033[1m"
yellowColour="\e[0;33m\033[1m"
purpleColour="\e[0;35m\033[1m"
turquoiseColour="\e[0;36m\033[1m"
grayColour="\e[0;37m\033[1m"

if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Greeting

export WIRELESS_HEADSET="alsa_card.usb-Logitech_G_series_G435_Wireless_Gaming_Headset_202105190004-00"

# Prompt
PROMPT="%F{red}┌[%f%F{cyan}%m%f%F{red}]─[%f%F{yellow}%D{%H:%M-%d/%m}%f%F{red}]─[%f%F{magenta}%d%f%F{red}]%f"$'\n'"%F{red}└╼%f%F{green}$USER%f%F{yellow}$%f"
# Export PATH$
export PATH=~/.local/bin:/snap/bin:/usr/sandbox/:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/usr/share/games:/usr/local/sbin:/usr/sbin:/sbin:/opt:/opt/nvim-linux64/bin:$PATH

function killAllDocker(){
	/usr/bin/docker rm -f $(/usr/bin/docker ps -aq)
	/usr/bin/docker rmi $(/usr/bin/docker image ls)
	/usr/bin/docker system prune 
}

function hex-encode()
{
  echo "$@" | xxd -p
}

function hex-decode()
{
  echo "$@" | xxd -p -r
}

function rot13()
{
  echo "$@" | tr 'A-Za-z' 'N-ZA-Mn-za-m'
}

function settarget(){
	ip_address=$1
	machine_name=$2
	echo $ip_address $machine_name > /home/dobliuw/.config/bin/target
}

function mkt(){
  /usr/bin/mkdir enviroment_$1
  cd enviroment_$1
  /usr/bin/mkdir {nmap,content,exploits}
  /usr/bin/ls -la 
}

# Extract nmap information
function extractPorts(){
  ports="$(cat $1 | grep -oP '\d{1,5}/open' | awk '{print $1}' FS='/' | xargs | tr ' ' ',')"
  ip_address="$(cat $1 | grep -oP '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | sort -u | head -n 1)"
  echo -e "\n[*] Extracting information...\n" > extractPorts.tmp
  echo -e "\t[*] IP Address: $ip_address"  >> extractPorts.tmp
  echo -e "\t[*] Open ports: $ports\n"  >> extractPorts.tmp
  echo $ports | tr -d '\n' | xclip -sel clip
  echo -e "[*] Ports copied to clipboard\n"  >> extractPorts.tmp
  /bin/cat extractPorts.tmp; /usr/bin/rm extractPorts.tmp
}

function gitSend(){
  [[ ! "$2" ]] && git add . | xargs git commit -m $1; git push; git status || git add . | xargs git commit -m $1 | git push --set-upstream origin $2; git status
 }

function discord(){
  /home/dobliuw/Desktop/Discord/./Discord &>/dev/null & disown
}

function wifiCrack(){
	interface=$1
  #verbose=$2
	if [[ $EUID -ne 0 ]]; then 
    echo "\n\n\t${redColour}Necesita ejecutarse como sudo ツ${endColour}\n\n"   
  else
    exist=$(/usr/sbin/ifconfig | grep $interface)
	  if [ "$exist" ]; then
		  /usr/sbin/ifconfig $interface down &>/dev/null
		  /usr/sbin/airmon-ng start $interface &>/dev/null
		  /usr/sbin/airmon-ng check kill &>/dev/null
		  interface=$(/usr/sbin/iw dev | /usr/bin/grep monitor -C 5 | /usr/bin/grep Interface | /usr/bin/awk '{print $2}')
    [[ "$verbose" == "-v" ]] && echo -e "\n${purpleColour}[*]${endColour} ${grayColour}Interfaz${endColour} ${purpleColour}$interface${endColour} ${grayColour}levantada en modo monitor.${endColour} \n"
    [[ "$verbose" == "-v" ]] && echo -e "\n${purpleColour}[!]${endColour} ${grayColour}Proceso${endColour} ${purpleColour}wpa_suplicant${endColour} ${grayColour}matado.${endColour}\n"
		  /usr/bin/macchanger --mac="00:20:91:da:af:91" $interface &>/dev/null
      echo -e "\n${purpleColour}[*]${endColour} ${grayColour}Mac de la interfaz ${endColour}${purpleColour}$interface${endColour}${grayColour} cambiada a ----->${endColour} ${purpleColour}00:20:91:da:af:91${endColour}\n"
		  /usr/sbin/ifconfig $interface up &>/dev/null
		  echo -e "\n${purpleColour}[i]${endColour} ${grayColour}Interfaz${endColour} ${purpleColour}$interface${endColour} ${grayColour}en modo monitor ON.${endColour}\n"
	  else
		  echo -e "\n${redColour}[!]${endColour} ${grayColour}No se reconoce la interfaz${endColour} ${redColour}$interface${endColour}\n" 
	  fi
  fi
}

# Customa aliases
alias encrypt='/usr/local/bin/stegcloak'
alias notes='/opt/./Obsidian &>/dev/null & disown'
alias cat='bat'
alias catnp='bat --no-paging'
alias catn='/bin/cat'
alias ch='echo '' > ~/.zsh_history'
alias ls='lsd'
alias ll='lsd -lh'
alias l='lsd --group-dirs=first'
alias lla='lsd -lha --group-dirs=first'
alias handbook='cat -l java ~/.config/sxhkd/sxhkdrc'
alias lock='i3lock-fancy'
alias htb='sudo openvpn /home/dobliuw/Desktop/machines/HTB/dobliuw.ovpn 2> /dev/null'
alias tryhm='sudo openvpn /home/dobliuw/Desktop/machines/tryhm/dobliuw.ovpn 2>/dev/null'
alias screens='flameshot gui'
alias code='code . &>/dev/null & disown'
alias fig='docker-compose'

# alias
#alias ls='ls -lh --color=auto'
alias dir='dir --color=auto'
alias vdir='vdir --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

#####################################################
# Auto completion / suggestion
# Mixing zsh-autocomplete and zsh-autosuggestions
# Requires: zsh-autocomplete (custom packaging by Parrot Team)
# Jobs: suggest files / foldername / histsory bellow the prompt
# Requires: zsh-autosuggestions (packaging by Debian Team)
# Jobs: Fish-like suggestion for command history
if [ -f /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
  source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

##################################################
# Fish like syntax highlighting
# Requires "zsh-syntax-highlighting" from apt
if [ -f /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
  source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

if [ -f /usr/share/zsh-autocomplete/zsh-autocomplete.plugin.zsh ]; then
 # source /usr/share/zsh-autocomplete/zsh-autocomplete.plugin.zsh
  # Select all suggestion instead of top on result only
  zstyle ':autocomplete:tab:*' insert-unambiguous yes
  zstyle ':autocomplete:tab:*' widget-style menu-select
  zstyle ':autocomplete:*' min-input 2
  bindkey $key[Up] up-line-or-history
  bindkey $key[Down] down-line-or-history
fi
#source /usr/share/zsh-sudo/sudo.plugin.zsh
# Save type history for completion and easier life
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
# setopt appendhistory
setopt histignorealldups sharehistory

# Useful alias for benchmarking programs
# require install package "time" sudo apt install time
# alias time="/usr/bin/time -f '\t%E real,\t%U user,\t%S sys,\t%K amem,\t%M mmem'"
# Display last command interminal
echo -en "\e]2;Parrot Terminal\a"
preexec () { print -Pn "\e]0;$1 - Parrot Terminal\a" }


source /home/dobliuw/powerlevel10k/powerlevel10k.zsh-theme

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.

# Use modern completion system
autoload -Uz compinit
compinit

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'


[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
